=================================================
Submitted by: Samita Shrestha, UTSA ID: qkp232
Programming Language and Compiler
CS5363, Spring '23
=================================================

This program is the Phase III and the final phase of building Decaf 22 programming language.
This program is the extension of the Scanner project (Phase I) and Parser project (Phase II).
This phase now implements a semantic analyzer and code generator for our compiler.
When we confirm the source program is free from compile-time errors, we will generate the code!

Development Environment:
========================
Linux OS (via fox server UTSA)

Project Execution Steps:
=======================

Scripting file may need permission to run

  Grant permission by:
   <From root folder>
  
   ~ chmod 777 run OR chmod +x run
   ~ chmod 777 spim  OR chmod +x spim
   
  
   ~ cd <workdirfolderpath>
   ~ chmod 777 build.sh OR chmod +x build.sh
   ~ chmod 777 exec.sh  OR chmod +x exec.sh
   


Building the Project:
====================
  ~ ./build.sh
  
  [NOTE: BUILD SUCCESSFUL!! on the console means the program compiled without any error!!
         BUILD FAILED!! on the console means the program couldnot be compiled due to some errors]
  The program should compile successfully to execute the output.
  
  Once program is "BUILD SUCCESSFUL"ly, we need to execute to get the output.

Executing the Project:
=====================
To execute in source code file:
  ~ ./exec.sh <inputfilepath>

To write to standard output stream
  ~ ./exec.sh <inputfilepath> > <outputpath>

[examples: ./exec.sh /home/qkp232/Phase3_qkp232/samples/bad1.decaf >/home/qkp232/Phase3_qkp232/output.out]


Here,

<filepath> refers to the path of input file that you would like to scan.
I have included the samples folder that has number of test input files.

<outputpath> refers to the path where you would like to store your 
completed output after parsing or the expected output in textual format.
In the example above, the output is stored in /home/qkp232/Phase3_qkp232/ 
directory with the filename as "output.out"

Note:
=====

Since the spim file is kept at the root directory, the output will come as
Loaded: ./exception instead of whole path of spim as in the .out file provided



